# Download a single file
curl http://path.to.the/file

# Download a file and specify a new filename
curl http://example.com/file.zip -o new_file.zip

# Download multiple files
curl -O URLOfFirstFile -O URLOfSecondFile

# Follow redirects
curl -L http://t.co/d

# Follow redirects and fetch all intermediate headers
curl -IL http://t.co/d

# Samples for '--write-out' syntax.
# - %{content_type} 
# - %{filename_effective}
# - %{response_code}
# - %{num_redirects}
# - %{size_download}
# - %{speed_download}/%{speed_upload}
# - %{ssl_verify_result}
# - %{url_effective} - useful with -L
curl http://t.co/d -w "Code: %{http_code}; R: %{redirect_url}\n" -o /dev/null

# Enable extra verbosity. https://ec.haxx.se/usingcurl-verbose.html
curl -v http://example.com

# Curl with full dump of bytes.
curl --trace dump http://example.com

# Download all sequentially numbered files (1-24)
curl http://example.com/pic[1-24].jpg

# Download a file and pass HTTP Authentication
curl -u username:password URL 

# Resume a previously failed download
curl -C - -o partial_file.zip http://example.com/file.zip

# Fetch only the HTTP headers from a response
curl -I http://example.com

# Fetch your external IP and network info as JSON
curl http://ifconfig.me/all/json

# Limit the rate of a download
curl --limit-rate 1000B -O http://path.to.the/file

# Send custom host headers
curl --verbose --header 'Host: www.example.com' 'http://123.45.64.1'
