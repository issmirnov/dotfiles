#!/usr/bin/env bash
# MIT Â© Sindre Sorhus - sindresorhus.com

# git hook to run a command after `git pull` or `git checkout` if a specified file was changed
# Run `chmod +x post-checkout` to make it executable then put it into `.git/hooks/`.

# Check HEAD to see if we are in a rebase, and avoid running the hook if so.
BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [[ $BRANCH == "HEAD" ]];then
    exit 0
fi


changed_files="$(git diff-tree -r --name-only --no-commit-id HEAD@{1} HEAD)"

check_run() {
	echo "$changed_files" | grep --quiet "$1" && echo " * changes detected in $1" && echo " *
running $2" && eval "$2"
}

# run installer script for new links
check_run .conf.yaml "~/.dotfiles/install"

# run upgrade script for cleanup
check_run upgrade.sh "~/.dotfiles/upgrade.sh"

# istall vim plugsin
check_run vim "(printf '\n' | vim +PlugInstall +PlugUpdate +qall)"

check_run "bat/syntaxes" "bat cache --build"

if [[ $OSTYPE == 'linux-gnu' ]]; then
    # Generate i3 config if changes detected
    check_run i3 "~/.dotfiles/i3/genconf"
elif [[ $OSTYPE == darwin* ]]; then
    # restart OSX window managers
    check_run yabai "brew services restart yabai"
    check_run skhd "~/.dotfiles/skhd/generator.sh"
fi
